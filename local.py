import streamlit as st
import pandas as pd
import time
from io import BytesIO
import requests

# === CONFIGURACI√ìN DE LA APP ===
st.set_page_config(page_title="Clasificador de Incidentes", layout="centered")
st.title("üßæ Clasificador de Incidentes Ferroviarios")

# === FUNCI√ìN DE CLASIFICACI√ìN LOCAL CON OLLAMA ===
def clasificar_incidente_ferroviario_con_razon(texto):
    prompt = f"""Le√© la siguiente descripci√≥n de un incidente ferroviario y devolv√© SOLO:

1. El Tipo de incidente m√°s adecuado seg√∫n la siguiente lista, basada en la definici√≥n, contexto y ejemplos proporcionados:
   - BARRERA ROTA:
     - Definici√≥n: Se entiende que hay un caso de barrera rota cuando se informa por el conductor o ayudente que cualquiera de sus brazos est√° roto.
     - Contexto: Usualmente, pero no siempre, en el texto se encuentra este tipo de incidente como 'brazo ascendente o brazo descendente roto'. Adem√°s se suele mencionar el paso a nivel  con la barrera rota y la persona que informa (conductor o ayudante). Si no es informado por el conductor o ayudante no se considera un incidente. En el texto suele haber abreviaturas, por ejemplo 'COND.' para conductor, 'AYTE' para ayudante; aunque pueden aparecer de otras maneras similares  y otras abreviaturas, son muy comunes ZDV para zona de v√≠as y PAN o P.A.N. para paso a nivel. Puede ser tambi√©n que no se mencione si el brazo es ascendente o descendente.
     - Ejemplos: COND. CORREA M. (3116) INFORMA P.A.N. RIVADAVIA KM. 33/026, BRAZO DESCENDENTE ROTO. T. 3056/E706. SR. DEL VALLE SE√ëALAMIENTO - SR. HERNANDEZ RESG. C/AVISO. SR. DEL VALLE DA EL NORMAL C/SEGURIDAD.-

   - BRAZOS DE BARRERA LEVANTADOS:
     - Definici√≥n: Se entiende que hay un caso de brazo de barrera levantado cuando cualquiera de sus brazos se informa por el conductor o ayudente que permanecen levantados.
     - Contexto: Usualmente, pero no siempre, en el texto se encuentra este tipo de incidente como 'brazo ascendente permanece levantado o brazo descendente permanece levantado'. Adem√°s se suele mencionar el paso a nivel y la persona que informa. Si no es informado por el conductor o ayudante no se considera un incidente.
     - Ejemplos: COND. GUZM√ÅN J. (3068), DE T. 3074/E721, INFORMA QUE BRAZO DESCENDENTE DE P.A.N. RUTA 25 KM 51/434 PERMANECEN LEVANTADOS. MEC. BARRETO C/A. SR. BOGADO, RESG., C/A. MEC. DEL VALLE DA NORMAL, SIN CUSTODIA.

   - BRAZOS DE BARRERA GIRADOS HACIA LA V√çA:
     - Definici√≥n: Se entiende que hay un caso de brazo de barrera girado hacia la v√≠a cuando cualquiera de sus brazos se encuentra girado hacia la zona de v√≠a, puede ser en algunos casos que ocupen parte de la v√≠a.
     - Ejemplos: COND. OLIVA (3125) TREN 3113 LOC. E705, COMUNICA P.A.N YRIGOYEN KM 15/649 BRAZO DESCENDENTE GIRADO HACIA ZONA DE V√çA. BARRIENTOS, SE√ëALAMIENTO, C/A.PACHECO, RESG, C/A. MEC. BARRETO DA EL NORMAL, CON RESG.

   - INVASI√ìN DE V√çA:
     - Definici√≥n: El conductor o ayudante aplica freno de emergencia por invasi√≥n de v√≠a por persona, animal, veh√≠culo u objeto.
     - Ejemplos: COND. CARBONEL (3023), T. 3154/E705 (4945-84), COMUNICA QUE APLIC√ì  FRENO DE EMERGENCIA EN KM 38/400 PARA EVITAR ACCIDENTE DE PERSONA,LAS MISMAS SE CORRIERON Y COMENZARON A TIRAR PIEDRAS A LA FORMACI√ìN. C/A. SR. MICALIZZI, RESG; SR. ACU√ëA, VIDEO; AUX. MEDINA.

   - PARADA INCORRECTA:
     - Definici√≥n: La formaci√≥n no queda alineada con el and√©n, puede deberse a falla o error de frenado.
     - Ejemplos: COND. MARTINEZ MILTON (3019) TREN 3039 LOC. E709 4984-45, COMUNICA EN ESTACI√ìN VILLA ADELINA, PARADA INCORRECTA, QUEDANDO LOCOMOTORA Y MEDIO COCHE FUERA DE LA PLATAFORMA, MANIFIESTA QUE FUE UN ERROR DE CALCULO,  SIN CONSECUENCIA.

   - EXCESO DE VELOCIDAD:
     - Definici√≥n: La formaci√≥n excede la velocidad m√°xima permitida para el tramo.
     - Ejemplos: CONTROLADOR GAVILAN DE CENTRO DE MONITOREO S.O.F.S.E. INFORMA POR  EXCESO DE VELOCIDAD DEL TREN 3086/E701 A 50 KM/H DEL KM. 39/000 AL  38/740. PRECAUCION DE 12 KM/H DEL KM. 39/070 AL 39/030 POR V√çA RENOVADA. C/A. SR. CODIGONI; SR. SERVIDIO; SR. GOMEZ DE VIDEO; AUX GONZALEZ. COND. VEGA D. (3050), COMUNICA QUE RESPETO LA PRECAUCION.

2. Una breve raz√≥n de por qu√© fue clasificado as√≠, haciendo referencia a los detalles clave del texto que justifican la clasificaci√≥n.

Formato de salida:
Tipo de Incidente: <nombre del tipo de incidente>
Raz√≥n: <explicaci√≥n>

En caso de dudas sobre la clasificaci√≥n, devolv√© 'REVISAR' como Tipo de Incidente y una breve explicaci√≥n.
Si no hay dudas y el texto no se corresponde con ninguno de los Tipos de Incidente proporcionados, devolv√© 'FILA SIN EVENTOS' como Tipo de Incidente y una breve explicaci√≥n.

Texto: {texto}
"""

    try:
        response = requests.post(
            "http://localhost:11434/api/generate",
            json={
                "model": "deepseek-r1:14b",
                "prompt": prompt,
                "stream": False
            }
        )

        if response.status_code != 200:
            return "ERROR", f"Error {response.status_code}: {response.text}"

        output = response.json().get("response", "").strip()
        tipo_incidente, razon = "", ""

        for linea in output.splitlines():
            if linea.lower().startswith("tipo de incidente:"):
                tipo_incidente = linea.split(":", 1)[1].strip()
            elif linea.lower().startswith("raz√≥n:") or linea.lower().startswith("razon:"):
                razon = linea.split(":", 1)[1].strip()

        return tipo_incidente, razon

    except Exception as e:
        return "ERROR", str(e)


# === INTERFAZ STREAMLIT ===

modo = st.radio("¬øQu√© quer√©s hacer?", ["üìù Clasificar un incidente manualmente", "üìÇ Clasificar archivo Excel/CSV"])

if modo == "üìù Clasificar un incidente manualmente":
    texto = st.text_area("‚úèÔ∏è Ingres√° un texto", height=200)

    if st.button("üìä Clasificar"):
        if not texto.strip():
            st.warning("Ingres√° un texto antes de clasificar.")
        else:
            with st.spinner("Clasificando..."):
                categoria, razon = clasificar_incidente_ferroviario_con_razon(texto)
            if categoria == "ERROR":
                st.error(f"‚ùå Error: {razon}")
            else:
                st.success("‚úÖ Clasificaci√≥n exitosa")
                st.write(f"**üìå Categor√≠a:** {categoria}")
                st.write(f"**üí¨ Raz√≥n:** {razon}")

else:
    archivo = st.file_uploader("üìÅ Sub√≠ un archivo Excel (.xlsx) o CSV (.csv)", type=["xlsx", "csv"])

    if archivo:
        if archivo.name.endswith(".csv"):
            df = pd.read_csv(archivo)
        else:
            df = pd.read_excel(archivo)

        st.write("‚úÖ Archivo cargado. Columnas:")
        st.write(df.columns.tolist())

        columna = st.selectbox("Seleccion√° la columna con los posibles incidentes:", df.columns)
        espera = st.slider("‚è± Espera entre clasificaciones (segundos)", 0, 10, 2)

        if st.button("üöÄ Clasificar archivo"):
            categorias = []
            razones = []
            total = len(df)
            progreso = st.progress(0)
            estado = st.empty()

            errores_consecutivos = 0
            limite_errores = 20

            for i, texto in enumerate(df[columna].astype(str)):
                estado.text(f"Clasificando fila {i + 1} de {total}...")

                try:
                    categoria, razon = clasificar_incidente_ferroviario_con_razon(texto)
                    if categoria == "ERROR":
                        errores_consecutivos += 1
                        razon = razon or "Error sin mensaje"
                    else:
                        errores_consecutivos = 0
                except Exception as e:
                    categoria = "ERROR"
                    razon = str(e)
                    errores_consecutivos += 1

                categorias.append(categoria)
                razones.append(razon)
                progreso.progress((i + 1) / total)

                if errores_consecutivos >= limite_errores:
                    st.error(f"‚ùå Se detectaron {errores_consecutivos} errores consecutivos. Se detiene la clasificaci√≥n.")
                    break

                time.sleep(espera)

            df["Clasificacion-Deepseek"] = categorias
            df["Razon-Deepseek"] = razones

            salida = BytesIO()
            df.to_excel(salida, index=False)
            salida.seek(0)

            nombre_base = archivo.name.rsplit(".", 1)[0]
            nombre_resultado = f"{nombre_base}_clasificado.xlsx"

            st.success("‚úÖ Clasificaci√≥n completada")
            st.download_button(
                label="‚¨áÔ∏è Descargar archivo clasificado",
                data=salida,
                file_name=nombre_resultado,
                mime="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
            )
